name: 📊 G-Rider 데이터 자동 업데이트 및 대시보드 배포

env:
  PYTHON_VERSION: '3.11'
  TZ: 'Asia/Seoul'

on:
  workflow_dispatch:
  schedule:
    # --- 한국시간(KST) 기준 스케줄 ---
    # Github Actions의 부하를 피해 정시 실행률을 높이기 위해 2분씩 늦춰서 설정합니다.
    # 1. 피크 타임 (15분 간격): 점심(10-13시), 저녁(17-20시)
    # UTC: 점심(1-4시), 저녁(8-11시) => 매 시 2분, 17분, 32분, 47분에 실행
    - cron: '2,17,32,47 1,2,3,4,8,9,10,11 * * *'
    # 2. 논피크 타임 (30분 간격): 그 외 시간대 (14-16시, 21-23시)
    # UTC: 5-7시, 12-14시 => 매 시 2분, 32분에 실행
    - cron: '2,32 5,6,7,12,13,14 * * *'

jobs:
  update-data:
    name: 📊 데이터 업데이트
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🐍 Python 환경 설정
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: 📦 의존성 설치
        run: pip install -r requirements.txt

      - name: G-Rider 자동화 스크립트 실행
        id: run-script
        run: |
          python semiauto/core/main_executor.py
        continue-on-error: true

      - name: 디버그 아티팩트 업로드 (실패 시)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: grider-debug-logs
          path: |
            ./debug/
            ./semiauto/dashboard/api/
          retention-days: 5

      - name: 📤 배포 아티팩트 업로드
        uses: actions/upload-pages-artifact@v3
        with:
          path: './semiauto/dashboard'

  deploy:
    name: 🚀 대시보드 배포
    needs: update-data
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 페이지 배포
        id: deployment
        uses: actions/deploy-pages@v4 