name: 심플 배민 플러스 24시간 자동화

on:
  schedule:
    # === 한국시간(KST) 기준 정확한 스케줄 ===
    # KST = UTC + 9시간이므로 UTC 시간은 -9시간으로 설정
    # 한국시간 10:00 = UTC 01:00, 한국시간 03:00 = UTC 18:00 (익일)
    
    # 🌅 하루 시작 메시지 (한국시간 10:00 = UTC 01:00)
    - cron: '0 1 * * *'
    
    # 📊 30분 간격 메시지 (한국시간 10:30~23:30 = UTC 01:30~14:30)
    - cron: '30 1,2,3,4,5,6,7,8,9,10,11,12,13,14 * * *'
    
    # 📊 정시 메시지 (한국시간 11:00~23:00 = UTC 02:00~14:00)
    - cron: '0 2,3,4,5,6,7,8,9,10,11,12,13,14 * * *'
    
    # 🌙 자정 메시지 (한국시간 00:00 = UTC 15:00) - 고생하셨습니다 인사말
    - cron: '0 15 * * *'
    
    # 🌅 익일 새벽 메시지 (한국시간 01:00~03:00 = UTC 16:00~18:00)
    - cron: '0 16,17,18 * * *'
    
    # 🚀 피크시간 15분 간격 추가 (한국시간 기준)
    # 아침점심피크 (06:00-12:59 평일, 06:00-13:59 휴일) - 15분, 45분
    # 한국시간 06:00-12:59 = UTC 21:00-03:59 (전날 21:00부터)
    - cron: '15,45 21,22,23,0,1,2,3 * * *'
    
    # 오후논피크 (13:00-16:59 평일, 14:00-16:59 휴일) - 15분, 45분
    # 한국시간 13:00-16:59 = UTC 04:00-07:59
    - cron: '15,45 4,5,6,7 * * *'
    
    # 저녁피크 (17:00-19:59) - 15분, 45분
    # 한국시간 17:00-19:59 = UTC 08:00-10:59
    - cron: '15,45 8,9,10 * * *'
    
    # 심야논피크 (20:00-03:00) - 15분, 45분
    # 한국시간 20:00-23:59 = UTC 11:00-14:59
    # 한국시간 00:00-03:00 = UTC 15:00-18:00 (익일)
    - cron: '15,45 11,12,13,14,15,16,17,18 * * *'
    
    # 🌅 익일 새벽 15분 간격 (한국시간 00:15~02:45 = UTC 15:15~17:45)
    # 심야논피크와 중복되므로 제거 (심야논피크에서 이미 처리됨)
    # - cron: '15,45 15,16,17 * * *'
    
  workflow_dispatch: # 수동 실행 가능

# 실패 알림 최소화 설정
env:
  PYTHONUNBUFFERED: 1
  PYTHONIOENCODING: utf-8
  TZ: Asia/Seoul  # 한국시간 설정
  LC_ALL: C.UTF-8
  LANG: C.UTF-8

jobs:
  send-grider-report:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    # 실패해도 워크플로우 중단하지 않음
    continue-on-error: true
    
    if: github.repository == github.event.repository.full_name
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: 시간대 확인
      run: |
        echo "🕐 현재 UTC 시간: $(date -u)"
        echo "🕐 현재 시스템 시간: $(date)"
        echo "🕐 환경변수 TZ: $TZ"
        echo "🕐 타임존 정보: $(timedatectl status 2>/dev/null || echo 'timedatectl not available')"
      
    - name: Python 3.11 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        # 루트 디렉토리의 requirements.txt 사용
        pip install -r requirements.txt
        
    - name: Chrome 설치
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: ChromeDriver 설치
      run: |
        # Chrome for Testing API를 사용한 최신 ChromeDriver 설치
        CHROME_VERSION=$(google-chrome --version | cut -d " " -f3)
        CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE")
        wget -O /tmp/chromedriver-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
        sudo unzip /tmp/chromedriver-linux64.zip -d /tmp/
        sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
    - name: 설정 파일 생성
      run: |
        cd semiauto
        echo "REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}" > config.txt
        echo "REFRESH_TOKEN=${{ secrets.KAKAO_REFRESH_TOKEN }}" >> config.txt
        echo "GRIDER_ID=${{ secrets.GRIDER_ID }}" >> config.txt
        echo "GRIDER_PASSWORD=${{ secrets.GRIDER_PASSWORD }}" >> config.txt
        
    - name: 심플 배민 플러스 리포트 전송
      run: |
        cd semiauto
        echo "🕐 Python 실행 전 시간 확인:"
        python -c "from datetime import datetime; import os; print(f'UTC: {datetime.utcnow()}'); print(f'Local: {datetime.now()}'); print(f'TZ: {os.environ.get(\"TZ\", \"Not set\")}')"
        echo "📅 휴일 정보 확인:"
        python -c "from datetime import datetime; import pytz; kst = pytz.timezone('Asia/Seoul'); now = datetime.now(kst); print(f'현재 날짜: {now.strftime(\"%Y-%m-%d\")}'); print(f'요일: {[\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"][now.weekday()]}요일')"
        echo "🚀 자동화 시작..."
        python core/final_solution.py --single-run
      # 실패해도 계속 진행
      continue-on-error: true
        
    - name: 로그 업로드 (실패시)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs-${{ github.run_number }}
        path: |
          semiauto/grider_automation.log
          semiauto/debug_grider_page.html
        retention-days: 7 